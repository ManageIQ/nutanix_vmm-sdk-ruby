=begin
#Nutanix Virtual Machine Management APIs

#Manage the life-cycle of virtual machines hosted on Nutanix

The version of the OpenAPI document: 4.0

Generated by: https://openapi-generator.tech
Generator version: 7.16.0

=end

require 'spec_helper'
require 'json'

# Unit tests for NutanixVmm::VmAntiAffinityPoliciesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'VmAntiAffinityPoliciesApi' do
  before do
    # run before each test
    @api_instance = NutanixVmm::VmAntiAffinityPoliciesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of VmAntiAffinityPoliciesApi' do
    it 'should create an instance of VmAntiAffinityPoliciesApi' do
      expect(@api_instance).to be_instance_of(NutanixVmm::VmAntiAffinityPoliciesApi)
    end
  end

  # unit tests for create_vm_anti_affinity_policy
  # Create VM-VM anti-affinity policy
  # Creates a VM-VM anti-affinity policy.
  # @param ntnx_request_id A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request. 
  # @param vmm_v40_ahv_policies_vm_anti_affinity_policy 
  # @param [Hash] opts the optional parameters
  # @return [CreateVmAntiAffinityPolicy202Response]
  describe 'create_vm_anti_affinity_policy test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_legacy_vm_anti_affinity_policy_by_id
  # Delete legacy VM-VM anti-affinity policy
  # Deletes the legacy VM-VM anti-affinity policy.
  # @param ext_id External ID of the legacy VM-VM Anti-Affinity policy of type UUID.
  # @param ntnx_request_id A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request. 
  # @param [Hash] opts the optional parameters
  # @return [DeleteLegacyVmAntiAffinityPolicyById202Response]
  describe 'delete_legacy_vm_anti_affinity_policy_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_vm_anti_affinity_policy_by_id
  # Delete VM-VM anti-affinity policy
  # Deletes the requested VM-VM anti-affinity policy.
  # @param ext_id A globally unique identifier of a VM-VM anti-affinity policy of type UUID.
  # @param if_match The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response 
  # @param ntnx_request_id A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request. 
  # @param [Hash] opts the optional parameters
  # @return [DeleteVmAntiAffinityPolicyById202Response]
  describe 'delete_vm_anti_affinity_policy_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_vm_anti_affinity_policy_by_id
  # Get VM-VM anti-affinity policy based on the provided external identifier
  # Fetches the VM-VM anti-affinity policy of the provided VM-VM anti-affinity policy external identifier.
  # @param ext_id A globally unique identifier of a VM-VM anti-affinity policy of type UUID.
  # @param [Hash] opts the optional parameters
  # @return [GetVmAntiAffinityPolicyById200Response]
  describe 'get_vm_anti_affinity_policy_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_legacy_vm_anti_affinity_policies
  # List legacy VM-VM anti-affinity policies
  # List legacy VM-VM anti-affinity policies.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results. 
  # @option opts [Integer] :limit A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set. 
  # @option opts [String] :filter A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. For example, filter &#39;$filter&#x3D;name eq &#39;karbon-ntnx-1.0&#39; would filter the result on cluster name &#39;karbon-ntnx1.0&#39;, filter &#39;$filter&#x3D;startswith(name, &#39;C&#39;)&#39; would filter on cluster name starting with &#39;C&#39;. The filter can be applied to the following fields: - extId - name 
  # @return [ListLegacyVmAntiAffinityPolicies200Response]
  describe 'list_legacy_vm_anti_affinity_policies test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_vm_anti_affinity_policies
  # List VM-VM anti-affinity policies
  # List VM-VM anti-affinity policies.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results. 
  # @option opts [Integer] :limit A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set. 
  # @option opts [String] :filter A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. For example, filter &#39;$filter&#x3D;name eq &#39;karbon-ntnx-1.0&#39; would filter the result on cluster name &#39;karbon-ntnx1.0&#39;, filter &#39;$filter&#x3D;startswith(name, &#39;C&#39;)&#39; would filter on cluster name starting with &#39;C&#39;. The filter can be applied to the following fields: - name 
  # @option opts [String] :orderby A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, &#39;$orderby&#x3D;templateName desc&#39; would get all templates sorted by templateName in descending order. The orderby can be applied to the following fields: - name - updateTime 
  # @return [ListVmAntiAffinityPolicies200Response]
  describe 'list_vm_anti_affinity_policies test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_vm_anti_affinity_policy_vm_compliance_states
  # List compliance states of VMs in the VM-VM anti-affinity policy based on the provided external identifier
  # Lists compliance states of VMs in the VM-VM anti-affinity policy of the provided VM-VM anti-affinity policy external identifier.
  # @param vm_anti_affinity_policy_ext_id A globally unique identifier of a VM-VM anti-affinity policy of type UUID.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results. 
  # @option opts [Integer] :limit A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set. 
  # @return [ListVmAntiAffinityPolicyVmComplianceStates200Response]
  describe 'list_vm_anti_affinity_policy_vm_compliance_states test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_vm_anti_affinity_policy_by_id
  # Update VM-VM anti-affinity policy
  # Updates the requested VM-VM anti-affinity policy.
  # @param ext_id A globally unique identifier of a VM-VM anti-affinity policy of type UUID.
  # @param if_match The If-Match request header makes the request conditional. When not provided, the server will respond with  an HTTP-428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow the successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP-412 (Precondition Failed) response will be returned.
  # @param ntnx_request_id A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request. 
  # @param vmm_v40_ahv_policies_vm_anti_affinity_policy 
  # @param [Hash] opts the optional parameters
  # @return [UpdateVmAntiAffinityPolicyById202Response]
  describe 'update_vm_anti_affinity_policy_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
